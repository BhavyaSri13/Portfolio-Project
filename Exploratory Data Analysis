-- Exploratory Data Analysis

-- View all data from the cleaned staging table
SELECT *
FROM layoffs_staging2;

-- Find the maximum number of layoffs reported
SELECT MAX(total_laid_off)
FROM layoffs_staging2;

-- Aggregate and summarize total layoffs by company, country, location, industry, stage, and year
SELECT company, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company
ORDER BY 2 DESC;

SELECT country, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY country
ORDER BY 2 DESC;

SELECT location, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY location
ORDER BY 3 DESC;

SELECT industry, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY industry
ORDER BY 2 DESC;

SELECT stage, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY stage
ORDER BY 2 DESC;

SELECT YEAR(`date`), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY YEAR(`date`)
ORDER BY 1 DESC;

-- Find the earliest and latest dates in the dataset
SELECT MIN(`date`), MAX(`date`)
FROM layoffs_staging2;

-- Calculate the average percentage of layoffs by company and order by the average in descending order
SELECT company, AVG(percentage_laid_off)
FROM layoffs_staging2
GROUP BY company
ORDER BY 2 DESC;

-- Aggregate total layoffs by month and order by month
SELECT SUBSTRING(`date`, 1, 7) AS `Month`, SUM(total_laid_off)
FROM layoffs_staging2
WHERE SUBSTRING(`date`, 1, 7) IS NOT NULL
GROUP BY `Month`
ORDER BY 1;

-- Calculate rolling total layoffs by month
WITH Rolling_Total AS
(
    SELECT SUBSTRING(`date`, 1, 7) AS `Month`, SUM(total_laid_off) AS `Sum_total_laid_off`
    FROM layoffs_staging2
    WHERE SUBSTRING(`date`, 1, 7) IS NOT NULL
    GROUP BY `Month`
    ORDER BY 1
)
SELECT `Month`, `Sum_total_laid_off`, SUM(`Sum_total_laid_off`) OVER(ORDER BY `Month`) AS `rolling_total`
FROM Rolling_Total;

-- Aggregate total layoffs by company and year, and order by the total number of layoffs in descending order
SELECT company, YEAR(`date`) AS `Year`, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company, `Year`
ORDER BY 3 DESC;

-- Rank companies by total layoffs for each year and select top 5 companies per year
WITH Company_Rank AS
(
    SELECT company, YEAR(`date`) AS `Year`, SUM(total_laid_off) AS total_laid_off
    FROM layoffs_staging2
    GROUP BY company, `Year`
), Company_Year_Ranking AS
(
    SELECT *,
    DENSE_RANK() OVER(PARTITION BY `Year` ORDER BY total_laid_off DESC) AS Ranking
    FROM Company_Rank
    WHERE `Year` IS NOT NULL
)
SELECT * 
FROM Company_Year_Ranking
WHERE Ranking <= 5;
